<!doctype html>
<html class="no-js" lang="{{ request.locale.iso_code }}" dir="{{ settings.text_direction }}">
<head>
  <meta name="google-site-verification" content="jpYsgzLPjreLSws5P8fKdgt3SPzabHIbUVuDgekPhYw" />
  <meta charset="utf-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">
  <meta name="viewport" content="width=device-width,initial-scale=1">
  <meta name="theme-color" content="{{ settings.color_button }}">
  <link rel="canonical" href="{{ canonical_url }}">
  <link rel="preconnect" href="https://cdn.shopify.com">
  <link rel="preconnect" href="https://fonts.shopifycdn.com">
  <link rel="dns-prefetch" href="https://productreviews.shopifycdn.com">
  <link rel="dns-prefetch" href="https://ajax.googleapis.com">
  <link rel="dns-prefetch" href="https://maps.googleapis.com">
  <link rel="dns-prefetch" href="https://maps.gstatic.com">

  {%- if settings.favicon != blank -%}
    <link rel="shortcut icon" href="{{ settings.favicon | img_url: '32x32' }}" type="image/png" />
  {%- endif -%}

  {%- render 'seo-title' -%}

  {%- if page_description -%}
  <meta name="description" content="{{ page_description | escape }}">
  {%- endif -%}

  {%- render 'social-meta-tags' -%}

  {%- render 'font-face' -%}
  {{ 'theme.css' | asset_url | stylesheet_tag }}
  {%- render 'css-variables' -%}

  <script>
    document.documentElement.className = document.documentElement.className.replace('no-js', 'js');

    window.theme = window.theme || {};
    theme.routes = {
      home: "{{ routes.root_url }}",
      cart: "{{ routes.cart_url | append: '.js' }}",
      cartPage: "{{ routes.cart_url }}",
      cartAdd: "{{ routes.cart_add_url | append: '.js' }}",
      cartChange: "{{ routes.cart_change_url | append: '.js' }}"
    };
    theme.strings = {
      soldOut: {{ 'products.product.sold_out' | t | json }},
      unavailable: {{ 'products.product.unavailable' | t | json }},
      stockLabel: {{ 'products.product.stock_label' | t: count: '[count]' | json }},
      willNotShipUntil: {{ 'products.product.will_not_ship_until' | t: date: '[date]' | json }},
      willBeInStockAfter: {{ 'products.product.will_be_in_stock_after' | t: date: '[date]' | json }},
      waitingForStock: {{ 'products.product.waiting_for_stock' | t | json }},
      savePrice: {{ 'products.general.save_html' | t: saved_amount: '[saved_amount]' | json }},
      cartEmpty: {{ 'cart.general.empty' | t | json }},
      cartTermsConfirmation: {{ 'cart.general.terms_confirm' | t | json }},
      searchCollections: {{ 'general.search.collections' | t | json }},
      searchPages: {{ 'general.search.pages' | t | json }},
      searchArticles: {{ 'general.search.articles' | t | json }}
    };
    theme.settings = {
      dynamicVariantsEnable: true,
      dynamicVariantType: {{ settings.variant_type | json }},
      cartType: {{ settings.cart_type | json }},
      isCustomerTemplate: {% if request.page_type contains 'customers/' %}true{% else %}false{% endif %},
      moneyFormat: {{ shop.money_format | json }},
      saveType: {{ settings.product_save_type | json }},
      recentlyViewedEnabled: false,
      productImageSize: {{ settings.product_grid_image_size | json }},
      productImageCover: {{ settings.product_grid_image_fill }},
      predictiveSearch: {{ settings.predictive_search_enabled }},
      predictiveSearchType: {{ settings.search_type | json }},
      inventoryThreshold: {{ settings.inventory_threshold }},
      quickView: {{ settings.quick_shop_enable }},
      themeName: 'Impulse',
      themeVersion: "4.1.4"
    };
  </script>

  {{ content_for_header }}

  <script src="{{ 'vendor-scripts-v9.js' | asset_url | split: '?' | first }}" defer="defer"></script>

  {%- if shop.enabled_currencies.size > 1 -%}
    <link rel="preload" as="style" href="{{ 'currency-flags.css' | asset_url | split: '?' | first }}" onload="this.onload=null;this.rel='stylesheet'">
    <link rel="stylesheet" href="{{ 'currency-flags.css' | asset_url | split: '?' | first }}">
  {%- endif -%}

  <script src="{{ 'theme.min.js' | asset_url }}" defer="defer"></script>

  {%- if request.page_type contains 'customers/' -%}
    <script src="{{ 'shopify_common.js' | shopify_asset_url }}" defer="defer"></script>
  {%- endif -%}
{% include 'booster-common' %}

<!--begin-boost-pfs-filter-css-->
  {% render 'boost-pfs-style' %}
<!--end-boost-pfs-filter-css-->


 </head>

<body class="template-{{ template | replace: '.', ' ' | truncatewords: 1, '' | handle }}{% if request.path == '/challenge' %} template-challange{% endif %}" data-center-text="{{ settings.type_body_align_text }}" data-button_style="{{ settings.button_style }}" data-type_header_capitalize="{{ settings.type_header_capitalize }}" data-type_headers_align_text="{{ settings.type_headers_align_text }}" data-type_product_capitalize="{{ settings.type_product_capitalize }}" data-swatch_style="{{ settings.swatch_style }}" {% if settings.disable_animations %}data-disable-animations="true"{% endif %}>
{% capture the_snippet_content %}{% render 'socialshopwave-helper' %}{% endcapture %}
            {% unless the_snippet_content contains 'Liquid error' %}
              {{ the_snippet_content }}
            {% endunless %}

  <a class="in-page-link visually-hidden skip-link" href="#MainContent">{{ 'general.accessibility.skip_to_content' | t }}</a>

  <div id="PageContainer" class="page-container">
    <div class="transition-body">

    {%- section 'header' -%}

      <main class="main-content" id="MainContent">
        {{ content_for_layout }}
      </main>

      {%- section 'footer-promotions' -%}
      {%- section 'footer' -%}

    </div>
  </div>

  {%- section 'newsletter-popup' -%}

  {%- liquid
    render 'video-modal'
    render 'photoswipe-template'
  -%}
  <script src="//cdn.codeblackbelt.com/js/modules/frequently-bought-together/main.min.js?shop=mkdr-store.myshopify.com" defer></script>

<!--begin-boost-pfs-js-->
  {% render 'boost-pfs' %}
<!--end-boost-pfs-js-->
  


  <script>


    if (typeof sswRun === 'function') {
      sswRun(function () {
        var waitForContainer = setInterval(function () {
          if (ssw('.grid--collection').length) {
            console.log('true');
            function addWidgets() {
              window.ssw_widgets_products = [];
              ssw('.grid--collection .grid-product__content').each(function (index, element) {
                if (!ssw(element).find(ssw('.ssw-faveicon-custom')).length) {
                  var getUrl = ssw(element).find('.grid-product__link').attr('href');
                  var sswFaveIcon = `<div class="ssw-faveicon-custom" data-product-id="${getUrl}"></div>`;
                  var sswReviewListing = `<div class="ssw-review-custom" data-product-id="${getUrl}"></div>`;
                  window.ssw_widgets_products.push(getUrl);
                  ssw(element).find('.grid-product__link').before(ssw(sswFaveIcon));
                  ssw(element).find(ssw('.grid-product__title')).after(ssw(sswReviewListing));
                }
              });

              function ssw_widgets(handles) {
                handles.forEach((handle) => {
                  ssw.get(handle, { view: 'ssw-metafield' }, function (res) {
                    let tmp = ssw('<div>', { html: res });
                    tmp.find('.ssw-faveiticon').each(function (e, i) {
                      ssw(`.ssw-faveicon-custom[data-product-id="${handle}"]`).html(i);
                    });
                    tmp.find('.ssw-widget-avg-rate-listing').each(function (e, i) {
                      ssw(`.ssw-review-custom[data-product-id="${handle}"]`).html(i);
                    });
                  });
                });
                window.ssw_widgets_products = [];
              }
              ssw_widgets(window.ssw_widgets_products);
            }

            addWidgets()

            const observer = new MutationObserver(function (mutations) {
              for (let mutation of mutations) {
                if (mutation.type === 'childList') {
                  addWidgets()
                }
              }

            })
            observer.observe(ssw('.grid--collection').get(0), { childList: true })
            clearInterval(waitForContainer)
          }
        }, 1000);
      });
    }
  </script>

  <script>
    if(typeof sswRun === 'function') {       
      sswRun(function(){ 
        var modalWishlistEmail = setInterval(function(){ 
          if(ssw('#share-faves-modal .ssw-modal-body').length){
            ssw('#share-faves-modal .ssw-modal-body input#sharefaves_from_email').attr("placeholder","Deine E-Mail-Adresse");                  
          	clearInterval(modalWishlistEmail);
          }; 
        }, 1000);
      });
    };

  </script>


</body>
</html>
